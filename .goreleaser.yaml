# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    ldflags:
      - >
        -s -w
        -X 'github.com/m87/ctx/core/version.Version={{.Version}}'
        -X 'github.com/m87/ctx/core/version.Commit={{.FullCommit}}'
        -X 'github.com/m87/ctx/core/version.Date={{.Date}}'


archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

changelog:
  use: git                  
  sort: asc
  filters:
    exclude:
      - '^chore'
      - '^docs'
      - '^test'
      - 'Merge pull request'
  groups:
    - title: "🚀 Features"
      regexp: "^feat(\\(.*\\))?:"
      order: 0
    - title: "🐞 Fixes"
      regexp: "^fix(\\(.*\\))?:"
      order: 1
    - title: "🧰 Chores"
      regexp: "^chore(\\(.*\\))?:"
      order: 2

release:
  github:
    owner: m87
    name: ctx
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
