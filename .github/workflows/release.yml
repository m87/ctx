name: goreleaser

on:
  push:
    tags:
      - "v*"             

permissions:
  contents: write        

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js (for Nx build in hooks)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: server/ui/ctx-dashboard/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./server/ui/ctx-dashboard
        run: npm ci --legacy-peer-deps
        
      - name: Install Cypress
        working-directory: ./server/ui/ctx-dashboard
        run: npx cypress install

      - name: Set Nx SHAs
        uses: nrwl/nx-set-shas@v4

      - name: Nx affected (PR)
        if: ${{ github.event_name == 'pull_request' }}
        working-directory: ./server/ui/ctx-dashboard
        env:
          NX_BASE: ''
          NX_HEAD: ''
        run: |
          set -euxo pipefail
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          git fetch --no-tags --prune origin "$BASE_SHA" "$HEAD_SHA"
          git rev-parse "$BASE_SHA"
          git rev-parse "$HEAD_SHA"
          #npx nx affected -t lint build --base="$BASE_SHA" --head="$HEAD_SHA" --verbose
          npx nx build

      - name: Nx affected (push)
        if: ${{ github.event_name == 'push' }}
        working-directory: ./server/ui/ctx-dashboard
        env:
          NX_BASE: ''
          NX_HEAD: ''
        run: |
          set -euxo pipefail
          BASE_SHA="${{ github.event.before }}"
          HEAD_SHA="${{ github.sha }}"  # to samo co github.event.after
          git fetch --no-tags --prune origin "$BASE_SHA" "$HEAD_SHA"
          git rev-parse "$BASE_SHA"
          git rev-parse "$HEAD_SHA"
          #npx nx affected -t lint build --base="$BASE_SHA" --head="$HEAD_SHA" --verbose
          npx nx build


      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"   

      - name: Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Download deps
        run: go mod download

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
