# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ctx

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  actions: read

jobs:

  build:
    runs-on: ubuntu-22.04
    container: node:20-bullseye
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install frontend dependencies
      working-directory: ./server/ui/ctx-dashboard
      env:
        CI: true
      run: npm ci --legacy-peer-deps

    - name: Install Cypress
      working-directory: ./server/ui/ctx-dashboard
      run: npx cypress install

    - name: Set Nx SHAs
      uses: nrwl/nx-set-shas@v4

    - name: Nx affected (PR)
      if: ${{ github.event_name == 'pull_request' }}
      working-directory: ./server/ui/ctx-dashboard
      env:
        NX_BASE: ''
        NX_HEAD: ''
      run: |
       set -euxo pipefail
       BASE_SHA="${{ github.event.pull_request.base.sha }}"
       HEAD_SHA="${{ github.event.pull_request.head.sha }}"
       git fetch --no-tags --prune origin "$BASE_SHA" "$HEAD_SHA"
       git rev-parse "$BASE_SHA"
       git rev-parse "$HEAD_SHA"
       #npx nx affected -t lint build --base="$BASE_SHA" --head="$HEAD_SHA" --verbose
       npx nx build

    - name: Nx affected (push)
      if: ${{ github.event_name == 'push' }}
      working-directory: ./server/ui/ctx-dashboard
      env:
        NX_BASE: ''
        NX_HEAD: ''
      run: |
        set -euxo pipefail
        BASE_SHA="${{ github.event.before }}"
        HEAD_SHA="${{ github.sha }}"  # to samo co github.event.after
        git fetch --no-tags --prune origin "$BASE_SHA" "$HEAD_SHA"
        git rev-parse "$BASE_SHA"
        git rev-parse "$HEAD_SHA"
        #npx nx affected -t lint build --base="$BASE_SHA" --head="$HEAD_SHA" --verbose
        npx nx build

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.4'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Run Cypress E2E tests
      working-directory: ./server/ui/ctx-dashboard
      run: npm run test:e2e
